# 高校实验室管理平台数据报告项目规则

## 项目概述
生成高校实验室管理平台数据报告的HTML项目，用于转换为PDF格式。项目专注于实验室设备开放共享、化学品管理、安全检查等核心业务领域的数据分析和报告生成。

## 核心技术规范

### HTML+CSS要求
- 只能使用纯HTML + CSS，不能使用任何框架
- CSS样式直接写在HTML文件内（内联或<style>标签）
- 每个报告对应一个独立的HTML文件

### Java框架兼容性要求 ⚠️
**重要：所有HTML必须兼容iText7和FreeMarker框架，禁止使用以下CSS属性：**

#### 禁止使用的Flexbox属性 ❌
- `display: flex` → 使用 `display: block` 或 `inline-block`
- `flex-direction: column` → 使用 `vertical-align: top` 和 `margin-bottom`
- `justify-content`, `align-items` → 使用 `text-align: center` 和 `margin: 0 auto`
- `flex: 1` → 使用固定宽度或百分比
- `gap: Xpx` → 使用 `margin` 和 `padding` 控制间距

#### 禁止使用的Grid属性 ❌
- `display: grid` → 使用 `display: block` 和 `text-align: center`
- `grid-template-columns` → 使用 `display: inline-block` 和 `width: X%`

#### 推荐使用的兼容属性 ✅
- `display: block`, `inline-block`
- `text-align: center`, `left`, `right`
- `position: relative`, `absolute`
- `margin`, `padding`
- `vertical-align: top`, `middle`

## 图表标准实现方式

### 1. 饼图标准实现 ✅
**使用SVG polyline绘制，兼容性最佳**

#### HTML结构
```html
<div class="pie-charts-container">
    <div class="pie-chart-wrapper">
        <h4 class="pie-chart-title">图表标题</h4>
        <svg width="200" height="200" viewBox="0 0 200 200">
            <!-- 使用polyline绘制圆弧 -->
            <polyline points="100,100 100,20 A80,80 0 0,1 180,100 Z" 
                      fill="#4338ca" stroke="#1e1b4b" stroke-width="2"/>
            <!-- 更多polyline... -->
        </svg>
        <div class="pie-legend">图例说明</div>
    </div>
</div>
```

#### CSS样式
```css
.pie-charts-container {
    text-align: center;
    margin: 25px 0;
    padding: 20px;
    background: #f8fafc;
    border-radius: 16px;
    border: 1px solid #e2e8f0;
}
.pie-chart-wrapper {
    text-align: center;
    width: 240px;
    padding: 20px;
    background: white;
    border-radius: 12px;
    border: 1px solid #e2e8f0;
    display: inline-block;
    vertical-align: top;
    margin: 0 10px 20px 0;
}
.pie-chart-title {
    font-size: 14px;
    font-weight: 600;
    color: white;
    margin-bottom: 20px;
    padding: 8px 12px;
    background: #4338ca;
    border-radius: 8px;
    line-height: 1.3;
}
```

### 2. 折线图标准实现 ✅
**使用SVG path绘制平滑曲线，支持数据点标记**

#### HTML结构
```html
<div class="trend-chart">
    <div class="chart-legend">
        <div class="legend-item">
            <div class="legend-color" style="background: #1e40af;"></div>
            <span>数据系列名称</span>
        </div>
    </div>
    <svg width="640" height="320" viewBox="0 0 800 400" preserveAspectRatio="xMidYMid meet" class="trend-svg">
        <!-- Y轴 -->
        <line x1="60" y1="20" x2="60" y2="380" stroke="#e2e8f0" stroke-width="2"/>
        <!-- X轴 -->
        <line x1="60" y1="380" x2="760" y2="380" stroke="#e2e8f0" stroke-width="2"/>
        <!-- 折线 -->
        <path d="M 60,120 Q 89,118 118,116 Q 147,113 176,110..." 
              fill="none" stroke="#1e40af" stroke-width="3" stroke-linecap="round"/>
        <!-- 数据点 -->
        <circle cx="60" cy="120" r="4" fill="#1e40af" stroke="white" stroke-width="2"/>
        <!-- 刻度标签 -->
        <text x="50" y="145" text-anchor="end" font-size="12" fill="#64748b">15吨</text>
    </svg>
</div>
```

#### CSS样式
```css
.trend-chart {
    position: relative;
    margin: 30px 0;
    padding: 20px;
    background: #f8fafc;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    overflow: visible !important;
    clear: both;
    display: block;
    page-break-inside: avoid;
}
.trend-svg {
    display: block;
    margin: 0 auto;
    position: relative;
    overflow: visible !important;
}
.chart-legend {
    margin-bottom: 20px;
    font-size: 14px;
    text-align: center;
}
.legend-item {
    display: inline-block;
    margin: 0 10px;
    vertical-align: middle;
    font-size: 14px;
    color: #374151;
    font-weight: 500;
}
.legend-color {
    width: 16px;
    height: 16px;
    border-radius: 4px;
    border: 2px solid #e2e8f0;
    display: inline-block;
    vertical-align: middle;
    margin-right: 8px;
}
```

#### 关键要点
- **固定尺寸**：`width="640" height="320"`，不使用百分比
- **viewBox**：`viewBox="0 0 800 400"`，坐标系与显示尺寸分离
- **preserveAspectRatio**：`"xMidYMid meet"`，确保比例正确
- **无CSS缩放**：避免transform、scale等属性
- **无padding**：避免内容区域被压缩

### 3. 柱状图标准实现 ✅
**使用CSS布局实现，支持动态宽度**

#### HTML结构
```html
<div class="bar-chart">
    <div class="bar-group">
        <span class="bar-label">标签1</span>
        <div class="bar bar-weight" style="width: 75%;">75%</div>
    </div>
    <div class="bar-group">
        <span class="bar-label">标签2</span>
        <div class="bar bar-volume" style="width: 60%;">60%</div>
    </div>
</div>
```

#### CSS样式
```css
.bar-chart {
    height: auto;
    min-height: 300px;
    padding: 20px 0;
    position: relative;
    text-align: center;
}
.bar-group {
    margin-bottom: 15px;
    text-align: center;
}
.bar-label {
    width: 80px;
    font-size: 14px;
    color: #64748b;
    text-align: right;
    font-weight: 500;
    display: inline-block;
    vertical-align: middle;
    margin-right: 15px;
}
.bar {
    height: 25px;
    border-radius: 4px;
    position: relative;
    text-align: right;
    padding-right: 8px;
    font-size: 12px;
    color: white;
    font-weight: 500;
    min-width: 40px;
    line-height: 25px;
    display: inline-block;
    vertical-align: middle;
}
.bar-weight { background: #4338ca; }
.bar-volume { background: #7c3aed; }
```

### 4. 数据表格标准实现 ✅
**标准HTML表格，支持样式定制**

#### HTML结构
```html
<table class="data-table">
    <thead>
        <tr>
            <th>列标题1</th>
            <th>列标题2</th>
            <th>列标题3</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>数据1</td>
            <td>数据2</td>
            <td>数据3</td>
        </tr>
        <tr class="total-row">
            <td>总计</td>
            <td>100</td>
            <td>200</td>
        </tr>
    </tbody>
</table>
```

#### CSS样式
```css
.data-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}
.data-table th, .data-table td {
    border: 1px solid #e2e8f0;
    padding: 12px;
    text-align: center;
}
.data-table th {
    background: #f1f5f9;
    font-weight: bold;
    color: #1e1b4b;
    border: 1px solid #e2e8f0;
}
.data-table tr:nth-child(even) {
    background: #f8fafc;
}
.data-table .total-row {
    background-color: #1e40af !important;
    color: white;
    font-weight: bold;
}
```

## 页面结构标准

### 封面页设计
```css
.cover-page {
    height: 297mm;
    padding: 20mm;
    background: #0a0f1a;
    color: #fff;
    text-align: center;
    page-break-after: always !important;
    page-break-inside: avoid !important;
    overflow: hidden;
}
.cover-title {
    font-size: 72px;
    font-weight: 800;
    margin-bottom: 20px;
    letter-spacing: 12px;
    color: #ffffff;
}
.cover-subtitle {
    font-size: 28px;
    margin-bottom: 24px;
    font-weight: 300;
    letter-spacing: 3px;
    color: rgba(255, 255, 255, 0.8);
}
```

### 目录页设计
```css
.toc-page {
    background: #ffffff;
    padding: 1.5cm 2cm;
    height: 100vh;
    text-align: center;
    page-break-after: always;
}
.toc-title {
    font-size: 22px;
    font-weight: 700;
    color: #1e1b4b;
    margin-bottom: 20px;
}
.toc-list {
    max-width: 480px;
    margin: 0 auto;
    text-align: left;
    padding-top: 10px;
}
```

### 内容页设计
```css
.content-page {
    background: white;
}
.section-title {
    font-size: 24px;
    font-weight: bold;
    color: #1e1b4b;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 3px solid #4338ca;
}
.chart-container {
    background: white;
    padding: 30px;
    border-radius: 12px;
    margin-bottom: 35px;
    border: 2px solid #e2e8f0;
}
.chart-title {
    font-size: 20px;
    font-weight: 600;
    color: #1e1b4b;
    margin-bottom: 25px;
    text-align: center;
    padding: 16px 24px;
    background: #f8fafc;
    border-radius: 12px;
    border: 2px solid #e2e8f0;
}
```

## 打印样式优化

### 核心打印样式
```css
@media print {
    .cover-page {
        height: 297mm !important;
        padding: 20mm !important;
        background: #0a0f1a !important;
        -webkit-print-color-adjust: exact !important;
        print-color-adjust: exact !important;
        color-adjust: exact !important;
        page-break-after: always !important;
        page-break-inside: avoid !important;
    }
    .toc-page {
        height: 100vh !important;
        page-break-after: always !important;
    }
    .content-page {
        page-break-before: always;
    }
    .chart-container {
        page-break-inside: avoid;
    }
    * {
        -webkit-print-color-adjust: exact !important;
        color-adjust: exact !important;
    }
}
```

## 专业配色方案

### 主色调
```css
:root {
    --primary-color: #1e1b4b;      /* 深蓝色 - 主标题 */
    --secondary-color: #4338ca;     /* 深紫色 - 强调色 */
    --accent-color: #60a5fa;        /* 亮蓝色 - 装饰线 */
    --text-primary: #1e1b4b;        /* 主要文字 */
    --text-secondary: #374151;       /* 次要文字 */
    --background-light: #f8fafc;     /* 浅色背景 */
    --border-color: #e2e8f0;         /* 边框颜色 */
    --success-color: #16a34a;        /* 成功色 */
    --warning-color: #dc2626;        /* 警告色 */
}
```

## 成功经验总结

### 关键成功要素
1. **SVG尺寸统一**：固定像素尺寸 + viewBox坐标系
2. **无CSS缩放**：避免transform、scale等属性
3. **无padding冲突**：SVG标签不使用padding
4. **preserveAspectRatio**：确保比例正确
5. **兼容性优先**：使用已验证的CSS属性

### 常见问题解决方案
- **图表压扁**：统一SVG尺寸，移除CSS缩放
- **位置偏移**：避免position: fixed，使用relative/absolute
- **字体显示**：使用系统默认字体，避免外联字体
- **页面断行**：使用正确的page-break属性

## 项目背景

### 业务领域
- **实验室安全管理**：安全检查、风险评估、事故预防
- **化学品管理**：采购、存储、使用、废弃全流程管理
- **设备开放共享**：提高设备利用率，促进科研合作
- **数据统计分析**：月度报告、年度总结、趋势分析

### 技术选型原因
- **iText7**：Java生态最成熟的PDF生成库
- **纯HTML+CSS**：最大兼容性，无JavaScript依赖
- **SVG图表**：矢量图形，PDF中清晰度高
- **Maven构建**：标准化依赖管理，便于CI/CD

## 开发流程

### 报告生成流程
1. **需求分析**：确定报告类型、数据维度、图表需求
2. **结构设计**：创建Markdown格式的设计文档
3. **HTML实现**：基于设计文档创建HTML模板
4. **样式优化**：应用标准CSS样式，确保兼容性
5. **PDF测试**：使用Java程序测试转换效果
6. **迭代优化**：根据测试结果调整样式和布局

### 质量控制
- **兼容性测试**：确保iText7和FreeMarker兼容
- **打印测试**：验证分页和样式正确性
- **内容验证**：检查数据准确性和图表比例
- **性能优化**：减少文件大小，提高转换速度

## 未来发展方向

### 短期目标
- 完善现有报告类型
- 优化图表样式和布局
- 建立完整的样式库

### 长期规划
- 支持更多图表类型
- 实现动态数据绑定
- 集成更多数据源
- 支持多语言国际化

---

**重要提醒**：所有图表实现必须遵循上述标准，确保PDF转换成功和视觉效果一致！
